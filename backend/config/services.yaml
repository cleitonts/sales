# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    Doctrine\ORM\EntityManagerInterface: '@doctrine.orm.entity_manager'

    App\Core\Ports\Rest\:
        resource: '../src/Core/Ports/Rest'
        tags: ['controller.service_arguments']

    command_handlers:
        resource: '../src/Core/Application/Command/*/*/*CommandHandler.php'
        namespace: App\Core\Application\Command\
        autoconfigure: false
        tags:
            - { name: messenger.message_handler, bus: command.bus }

    query_handlers:
        namespace: App\Core\Application\Query\
        resource: '../src/Core/Application/Query/*/*/*QueryHandler.php'
        autoconfigure: false
        tags:
            - { name: messenger.message_handler, bus: query.bus }

    event_handlers:
        namespace: App\Core\Application\
        resource: '../src/Core/Application/**/*EventHandler.php'
        autoconfigure: false
        tags:
            - { name: messenger.message_handler, bus: event.bus }

    App\Shared\Infrastructure\Doctrine\DomainEventSubscriber:
        tags:
            - { name: 'doctrine.event_subscriber' }

    repositories:
        resource: '../src/*/Domain/Repository/*'
        namespace: 'Domain\Repository\'
        autoconfigure: false
        tags: [ 'doctrine.repository_service' ]

#    app.event.jwt_created_listener:
#        class: Panthir\Infrastructure\EventListener\JWTListener
#        tags:
#            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_jwt_decoded, method: onJWTDecoded }
#            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_jwt_created, method: onJWTCreated }